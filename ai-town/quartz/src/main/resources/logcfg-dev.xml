<!--
scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration scan="true" scanPeriod="60 seconds" packagingData="true">
    <!--
    property：用来定义变量值的标签，<property> 有两个属性，name和value。通过<property>定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。
    例如使用<property>定义上下文名称，然后在<contentName>设置logger上下文时使用。
    -->
    <property name="app_name" value="quartz" />
    <property name="log_home" value="logger/${app_name}" />
    <property name="log_lv" value="debug"/>
    <property name="maxFileSize" value="10MB"/>
    <property name="maxHistory" value="7"/>

   


    <!-- ******************** appender：日志目的地 start ******************** -->
    <!-- 标准输出：console -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder 默认配置为PatternLayoutEncoder -->
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>[%d{MM-dd HH:mm:ss.SSSS}][%thread][%-5level]%msg%n</pattern>
			<charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 文件输出：file -->
    <appender name="all" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <totalSizeCap >${maxFileSize}</totalSizeCap>
            <maxHistory>${maxHistory}</maxHistory>
            <FileNamePattern>${log_home}/all.${app_name}.%d{yyyyMMdd}.log</FileNamePattern>
        </rollingPolicy>
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSSS}][%thread][%-5level]%msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <appender name="debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <totalSizeCap >${maxFileSize}</totalSizeCap>
            <maxHistory>${maxHistory}</maxHistory>
            <FileNamePattern>${log_home}/debug/debug.${app_name}.%d{yyyyMMdd}.log</FileNamePattern>
        </rollingPolicy>
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSSS}][%thread][%-5level]%msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <totalSizeCap >${maxFileSize}</totalSizeCap>
            <maxHistory>${maxHistory}</maxHistory>
            <FileNamePattern>${log_home}/info/info.${app_name}.%d{yyyyMMdd}.log</FileNamePattern>
        </rollingPolicy>
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSSS}][%thread][%-5level]%msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>info</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <totalSizeCap >${maxFileSize}</totalSizeCap>
            <maxHistory>${maxHistory}</maxHistory>
            <FileNamePattern>${log_home}/error/error.${app_name}.%d{yyyyMMdd}.log</FileNamePattern>
        </rollingPolicy>
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSSS}][%thread][%-5level]%msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!-- ******************** appender：日志目的地 end ******************** -->

    <!-- ******************** root：定义日志的level、appender，且最多只能配置一个 start ******************** -->

    <!--TRACE < DEBUG < INFO <  WARN < ERROR-->
    <root level="${log_lv}">
        <!-- 定义了INFO及以上级别的日志，分别在文件和控制台输出 -->
        <appender-ref ref="console" />
        <!--appender-ref ref="all" /-->        
        <appender-ref ref="debug" />
        <appender-ref ref="info" />
        <appender-ref ref="error" />
    </root>

    <!-- ******************** root：定义日志的level、appender，且最多只能配置一个 end ******************** -->
</configuration>
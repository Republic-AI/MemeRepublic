// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_node.proto

package com.infinity.protocol;

public final class ServerNode {
  private ServerNode() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface server_nodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.infinity.protocol.server_node)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 节点id
     * </pre>
     *
     * <code>string node_id = 1;</code>
     */
    java.lang.String getNodeId();
    /**
     * <pre>
     * 节点id
     * </pre>
     *
     * <code>string node_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getNodeIdBytes();

    /**
     * <pre>
     * 内网地址
     * </pre>
     *
     * <code>int32 ip_lan = 2;</code>
     */
    int getIpLan();

    /**
     * <pre>
     * 外网地址
     * </pre>
     *
     * <code>int32 ip_public = 3;</code>
     */
    int getIpPublic();

    /**
     * <pre>
     * 内网端口
     * </pre>
     *
     * <code>int32 port_lan = 4;</code>
     */
    int getPortLan();

    /**
     * <pre>
     * 外网端口
     * </pre>
     *
     * <code>int32 port_public = 5;</code>
     */
    int getPortPublic();

    /**
     * <pre>
     * 域信息
     * </pre>
     *
     * <code>string domain = 6;</code>
     */
    java.lang.String getDomain();
    /**
     * <pre>
     * 域信息
     * </pre>
     *
     * <code>string domain = 6;</code>
     */
    com.google.protobuf.ByteString
        getDomainBytes();

    /**
     * <pre>
     * UDP端口
     * </pre>
     *
     * <code>int32 udp_port = 7;</code>
     */
    int getUdpPort();

    /**
     * <pre>
     * 连接类型：0:主动连接,1:被动连接
     * </pre>
     *
     * <code>int32 channel = 8;</code>
     */
    int getChannel();

    /**
     * <pre>
     *节点类型；G:网关,P:platform,C:chatgpt
     * </pre>
     *
     * <code>string type = 9;</code>
     */
    java.lang.String getType();
    /**
     * <pre>
     *节点类型；G:网关,P:platform,C:chatgpt
     * </pre>
     *
     * <code>string type = 9;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();
  }
  /**
   * Protobuf type {@code com.infinity.protocol.server_node}
   */
  public  static final class server_node extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.infinity.protocol.server_node)
      server_nodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use server_node.newBuilder() to construct.
    private server_node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private server_node() {
      nodeId_ = "";
      domain_ = "";
      type_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new server_node();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private server_node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              nodeId_ = s;
              break;
            }
            case 16: {

              ipLan_ = input.readInt32();
              break;
            }
            case 24: {

              ipPublic_ = input.readInt32();
              break;
            }
            case 32: {

              portLan_ = input.readInt32();
              break;
            }
            case 40: {

              portPublic_ = input.readInt32();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              domain_ = s;
              break;
            }
            case 56: {

              udpPort_ = input.readInt32();
              break;
            }
            case 64: {

              channel_ = input.readInt32();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.infinity.protocol.ServerNode.internal_static_com_infinity_protocol_server_node_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.infinity.protocol.ServerNode.internal_static_com_infinity_protocol_server_node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.infinity.protocol.ServerNode.server_node.class, com.infinity.protocol.ServerNode.server_node.Builder.class);
    }

    public static final int NODE_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object nodeId_;
    /**
     * <pre>
     * 节点id
     * </pre>
     *
     * <code>string node_id = 1;</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nodeId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 节点id
     * </pre>
     *
     * <code>string node_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IP_LAN_FIELD_NUMBER = 2;
    private int ipLan_;
    /**
     * <pre>
     * 内网地址
     * </pre>
     *
     * <code>int32 ip_lan = 2;</code>
     */
    public int getIpLan() {
      return ipLan_;
    }

    public static final int IP_PUBLIC_FIELD_NUMBER = 3;
    private int ipPublic_;
    /**
     * <pre>
     * 外网地址
     * </pre>
     *
     * <code>int32 ip_public = 3;</code>
     */
    public int getIpPublic() {
      return ipPublic_;
    }

    public static final int PORT_LAN_FIELD_NUMBER = 4;
    private int portLan_;
    /**
     * <pre>
     * 内网端口
     * </pre>
     *
     * <code>int32 port_lan = 4;</code>
     */
    public int getPortLan() {
      return portLan_;
    }

    public static final int PORT_PUBLIC_FIELD_NUMBER = 5;
    private int portPublic_;
    /**
     * <pre>
     * 外网端口
     * </pre>
     *
     * <code>int32 port_public = 5;</code>
     */
    public int getPortPublic() {
      return portPublic_;
    }

    public static final int DOMAIN_FIELD_NUMBER = 6;
    private volatile java.lang.Object domain_;
    /**
     * <pre>
     * 域信息
     * </pre>
     *
     * <code>string domain = 6;</code>
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domain_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 域信息
     * </pre>
     *
     * <code>string domain = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UDP_PORT_FIELD_NUMBER = 7;
    private int udpPort_;
    /**
     * <pre>
     * UDP端口
     * </pre>
     *
     * <code>int32 udp_port = 7;</code>
     */
    public int getUdpPort() {
      return udpPort_;
    }

    public static final int CHANNEL_FIELD_NUMBER = 8;
    private int channel_;
    /**
     * <pre>
     * 连接类型：0:主动连接,1:被动连接
     * </pre>
     *
     * <code>int32 channel = 8;</code>
     */
    public int getChannel() {
      return channel_;
    }

    public static final int TYPE_FIELD_NUMBER = 9;
    private volatile java.lang.Object type_;
    /**
     * <pre>
     *节点类型；G:网关,P:platform,C:chatgpt
     * </pre>
     *
     * <code>string type = 9;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *节点类型；G:网关,P:platform,C:chatgpt
     * </pre>
     *
     * <code>string type = 9;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNodeIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nodeId_);
      }
      if (ipLan_ != 0) {
        output.writeInt32(2, ipLan_);
      }
      if (ipPublic_ != 0) {
        output.writeInt32(3, ipPublic_);
      }
      if (portLan_ != 0) {
        output.writeInt32(4, portLan_);
      }
      if (portPublic_ != 0) {
        output.writeInt32(5, portPublic_);
      }
      if (!getDomainBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, domain_);
      }
      if (udpPort_ != 0) {
        output.writeInt32(7, udpPort_);
      }
      if (channel_ != 0) {
        output.writeInt32(8, channel_);
      }
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNodeIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nodeId_);
      }
      if (ipLan_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ipLan_);
      }
      if (ipPublic_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ipPublic_);
      }
      if (portLan_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, portLan_);
      }
      if (portPublic_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, portPublic_);
      }
      if (!getDomainBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, domain_);
      }
      if (udpPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, udpPort_);
      }
      if (channel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, channel_);
      }
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.infinity.protocol.ServerNode.server_node)) {
        return super.equals(obj);
      }
      com.infinity.protocol.ServerNode.server_node other = (com.infinity.protocol.ServerNode.server_node) obj;

      if (!getNodeId()
          .equals(other.getNodeId())) return false;
      if (getIpLan()
          != other.getIpLan()) return false;
      if (getIpPublic()
          != other.getIpPublic()) return false;
      if (getPortLan()
          != other.getPortLan()) return false;
      if (getPortPublic()
          != other.getPortPublic()) return false;
      if (!getDomain()
          .equals(other.getDomain())) return false;
      if (getUdpPort()
          != other.getUdpPort()) return false;
      if (getChannel()
          != other.getChannel()) return false;
      if (!getType()
          .equals(other.getType())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId().hashCode();
      hash = (37 * hash) + IP_LAN_FIELD_NUMBER;
      hash = (53 * hash) + getIpLan();
      hash = (37 * hash) + IP_PUBLIC_FIELD_NUMBER;
      hash = (53 * hash) + getIpPublic();
      hash = (37 * hash) + PORT_LAN_FIELD_NUMBER;
      hash = (53 * hash) + getPortLan();
      hash = (37 * hash) + PORT_PUBLIC_FIELD_NUMBER;
      hash = (53 * hash) + getPortPublic();
      hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getDomain().hashCode();
      hash = (37 * hash) + UDP_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getUdpPort();
      hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
      hash = (53 * hash) + getChannel();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.infinity.protocol.ServerNode.server_node parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.infinity.protocol.ServerNode.server_node parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.infinity.protocol.ServerNode.server_node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.infinity.protocol.ServerNode.server_node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.infinity.protocol.ServerNode.server_node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.infinity.protocol.ServerNode.server_node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.infinity.protocol.ServerNode.server_node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.infinity.protocol.ServerNode.server_node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.infinity.protocol.ServerNode.server_node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.infinity.protocol.ServerNode.server_node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.infinity.protocol.ServerNode.server_node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.infinity.protocol.ServerNode.server_node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.infinity.protocol.ServerNode.server_node prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.infinity.protocol.server_node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.infinity.protocol.server_node)
        com.infinity.protocol.ServerNode.server_nodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.infinity.protocol.ServerNode.internal_static_com_infinity_protocol_server_node_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.infinity.protocol.ServerNode.internal_static_com_infinity_protocol_server_node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.infinity.protocol.ServerNode.server_node.class, com.infinity.protocol.ServerNode.server_node.Builder.class);
      }

      // Construct using com.infinity.protocol.ServerNode.server_node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nodeId_ = "";

        ipLan_ = 0;

        ipPublic_ = 0;

        portLan_ = 0;

        portPublic_ = 0;

        domain_ = "";

        udpPort_ = 0;

        channel_ = 0;

        type_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.infinity.protocol.ServerNode.internal_static_com_infinity_protocol_server_node_descriptor;
      }

      @java.lang.Override
      public com.infinity.protocol.ServerNode.server_node getDefaultInstanceForType() {
        return com.infinity.protocol.ServerNode.server_node.getDefaultInstance();
      }

      @java.lang.Override
      public com.infinity.protocol.ServerNode.server_node build() {
        com.infinity.protocol.ServerNode.server_node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.infinity.protocol.ServerNode.server_node buildPartial() {
        com.infinity.protocol.ServerNode.server_node result = new com.infinity.protocol.ServerNode.server_node(this);
        result.nodeId_ = nodeId_;
        result.ipLan_ = ipLan_;
        result.ipPublic_ = ipPublic_;
        result.portLan_ = portLan_;
        result.portPublic_ = portPublic_;
        result.domain_ = domain_;
        result.udpPort_ = udpPort_;
        result.channel_ = channel_;
        result.type_ = type_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.infinity.protocol.ServerNode.server_node) {
          return mergeFrom((com.infinity.protocol.ServerNode.server_node)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.infinity.protocol.ServerNode.server_node other) {
        if (other == com.infinity.protocol.ServerNode.server_node.getDefaultInstance()) return this;
        if (!other.getNodeId().isEmpty()) {
          nodeId_ = other.nodeId_;
          onChanged();
        }
        if (other.getIpLan() != 0) {
          setIpLan(other.getIpLan());
        }
        if (other.getIpPublic() != 0) {
          setIpPublic(other.getIpPublic());
        }
        if (other.getPortLan() != 0) {
          setPortLan(other.getPortLan());
        }
        if (other.getPortPublic() != 0) {
          setPortPublic(other.getPortPublic());
        }
        if (!other.getDomain().isEmpty()) {
          domain_ = other.domain_;
          onChanged();
        }
        if (other.getUdpPort() != 0) {
          setUdpPort(other.getUdpPort());
        }
        if (other.getChannel() != 0) {
          setChannel(other.getChannel());
        }
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.infinity.protocol.ServerNode.server_node parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.infinity.protocol.ServerNode.server_node) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object nodeId_ = "";
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public java.lang.String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          nodeId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNodeIdBytes() {
        java.lang.Object ref = nodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public Builder setNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>string node_id = 1;</code>
       */
      public Builder setNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        nodeId_ = value;
        onChanged();
        return this;
      }

      private int ipLan_ ;
      /**
       * <pre>
       * 内网地址
       * </pre>
       *
       * <code>int32 ip_lan = 2;</code>
       */
      public int getIpLan() {
        return ipLan_;
      }
      /**
       * <pre>
       * 内网地址
       * </pre>
       *
       * <code>int32 ip_lan = 2;</code>
       */
      public Builder setIpLan(int value) {
        
        ipLan_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 内网地址
       * </pre>
       *
       * <code>int32 ip_lan = 2;</code>
       */
      public Builder clearIpLan() {
        
        ipLan_ = 0;
        onChanged();
        return this;
      }

      private int ipPublic_ ;
      /**
       * <pre>
       * 外网地址
       * </pre>
       *
       * <code>int32 ip_public = 3;</code>
       */
      public int getIpPublic() {
        return ipPublic_;
      }
      /**
       * <pre>
       * 外网地址
       * </pre>
       *
       * <code>int32 ip_public = 3;</code>
       */
      public Builder setIpPublic(int value) {
        
        ipPublic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 外网地址
       * </pre>
       *
       * <code>int32 ip_public = 3;</code>
       */
      public Builder clearIpPublic() {
        
        ipPublic_ = 0;
        onChanged();
        return this;
      }

      private int portLan_ ;
      /**
       * <pre>
       * 内网端口
       * </pre>
       *
       * <code>int32 port_lan = 4;</code>
       */
      public int getPortLan() {
        return portLan_;
      }
      /**
       * <pre>
       * 内网端口
       * </pre>
       *
       * <code>int32 port_lan = 4;</code>
       */
      public Builder setPortLan(int value) {
        
        portLan_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 内网端口
       * </pre>
       *
       * <code>int32 port_lan = 4;</code>
       */
      public Builder clearPortLan() {
        
        portLan_ = 0;
        onChanged();
        return this;
      }

      private int portPublic_ ;
      /**
       * <pre>
       * 外网端口
       * </pre>
       *
       * <code>int32 port_public = 5;</code>
       */
      public int getPortPublic() {
        return portPublic_;
      }
      /**
       * <pre>
       * 外网端口
       * </pre>
       *
       * <code>int32 port_public = 5;</code>
       */
      public Builder setPortPublic(int value) {
        
        portPublic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 外网端口
       * </pre>
       *
       * <code>int32 port_public = 5;</code>
       */
      public Builder clearPortPublic() {
        
        portPublic_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object domain_ = "";
      /**
       * <pre>
       * 域信息
       * </pre>
       *
       * <code>string domain = 6;</code>
       */
      public java.lang.String getDomain() {
        java.lang.Object ref = domain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          domain_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 域信息
       * </pre>
       *
       * <code>string domain = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDomainBytes() {
        java.lang.Object ref = domain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          domain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 域信息
       * </pre>
       *
       * <code>string domain = 6;</code>
       */
      public Builder setDomain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        domain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 域信息
       * </pre>
       *
       * <code>string domain = 6;</code>
       */
      public Builder clearDomain() {
        
        domain_ = getDefaultInstance().getDomain();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 域信息
       * </pre>
       *
       * <code>string domain = 6;</code>
       */
      public Builder setDomainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        domain_ = value;
        onChanged();
        return this;
      }

      private int udpPort_ ;
      /**
       * <pre>
       * UDP端口
       * </pre>
       *
       * <code>int32 udp_port = 7;</code>
       */
      public int getUdpPort() {
        return udpPort_;
      }
      /**
       * <pre>
       * UDP端口
       * </pre>
       *
       * <code>int32 udp_port = 7;</code>
       */
      public Builder setUdpPort(int value) {
        
        udpPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * UDP端口
       * </pre>
       *
       * <code>int32 udp_port = 7;</code>
       */
      public Builder clearUdpPort() {
        
        udpPort_ = 0;
        onChanged();
        return this;
      }

      private int channel_ ;
      /**
       * <pre>
       * 连接类型：0:主动连接,1:被动连接
       * </pre>
       *
       * <code>int32 channel = 8;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <pre>
       * 连接类型：0:主动连接,1:被动连接
       * </pre>
       *
       * <code>int32 channel = 8;</code>
       */
      public Builder setChannel(int value) {
        
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 连接类型：0:主动连接,1:被动连接
       * </pre>
       *
       * <code>int32 channel = 8;</code>
       */
      public Builder clearChannel() {
        
        channel_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <pre>
       *节点类型；G:网关,P:platform,C:chatgpt
       * </pre>
       *
       * <code>string type = 9;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *节点类型；G:网关,P:platform,C:chatgpt
       * </pre>
       *
       * <code>string type = 9;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *节点类型；G:网关,P:platform,C:chatgpt
       * </pre>
       *
       * <code>string type = 9;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点类型；G:网关,P:platform,C:chatgpt
       * </pre>
       *
       * <code>string type = 9;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *节点类型；G:网关,P:platform,C:chatgpt
       * </pre>
       *
       * <code>string type = 9;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.infinity.protocol.server_node)
    }

    // @@protoc_insertion_point(class_scope:com.infinity.protocol.server_node)
    private static final com.infinity.protocol.ServerNode.server_node DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.infinity.protocol.ServerNode.server_node();
    }

    public static com.infinity.protocol.ServerNode.server_node getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<server_node>
        PARSER = new com.google.protobuf.AbstractParser<server_node>() {
      @java.lang.Override
      public server_node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new server_node(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<server_node> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<server_node> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.infinity.protocol.ServerNode.server_node getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_infinity_protocol_server_node_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_infinity_protocol_server_node_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021server_node.proto\022\025com.infinity.protoc" +
      "ol\"\251\001\n\013server_node\022\017\n\007node_id\030\001 \001(\t\022\016\n\006i" +
      "p_lan\030\002 \001(\005\022\021\n\tip_public\030\003 \001(\005\022\020\n\010port_l" +
      "an\030\004 \001(\005\022\023\n\013port_public\030\005 \001(\005\022\016\n\006domain\030" +
      "\006 \001(\t\022\020\n\010udp_port\030\007 \001(\005\022\017\n\007channel\030\010 \001(\005" +
      "\022\014\n\004type\030\t \001(\tb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_infinity_protocol_server_node_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_infinity_protocol_server_node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_infinity_protocol_server_node_descriptor,
        new java.lang.String[] { "NodeId", "IpLan", "IpPublic", "PortLan", "PortPublic", "Domain", "UdpPort", "Channel", "Type", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
